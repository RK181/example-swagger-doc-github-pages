openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://localhost:8000
servers:
  - url: http://localhost:8000/api
tags:
  - name: auth
    description: Recurso de auteticacion del usuario
  - name: group
    description: Recurso de grupo de la pareja
  - name: reward
    description: Recurso de recompensas de la pareja 
paths:
  /reward/create:
    post:
      tags:
        - reward
      summary: Logs user into the system
      description: ''
      operationId: createReward
      security:
        - bearerAuth: []
      requestBody:
        description: Create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reward'
      responses:
        '200':
          description: successful operation
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid username/password supplied
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: server error
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
  /group/reward/list:
    get:
      tags:
        - reward
      summary: Logs user into the system
      description: ''
      operationId: getGroupRewardList
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
           application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Reward'
        '400':
          description: Validation error
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: server error
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
  /reward/{id}:
    get:
      tags:
        - reward
      summary: Logs user into the system
      description: ''
      operationId: getRewardById
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the reward to delete
      responses:
        '200':
          description: successful operation
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/Reward'
        '400':
          description: Validation error
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: server error
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
  /reward/delete/{id}:
    delete:
      tags:
        - reward
      summary: Logs user into the system
      description: ''
      operationId: deleteRewardById
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the reward to delete
      responses:
        '200':
          description: successful operation
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Validation error
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: server error
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
  /group/delete:
    delete:
      tags:
        - group
      summary: Logs user into the system
      description: ''
      operationId: deleteGroup
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Validation error
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: server error
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
  /group/update:
    put:
      tags:
        - group
      summary: Logs user into the system
      description: ''
      operationId: updateGroup
      security:
        - bearerAuth: []
      requestBody:
        description: Update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          description: successful operation
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Validation error
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: server error
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
  /group:
    get:
      tags:
        - group
      summary: Logs user into the system
      description: ''
      operationId: getGroup
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/Group'
        '404':
          description: not found
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
        '500':
          description: server error
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
  /group/create:
    post:
      tags:
        - group
      summary: Logs user into the system
      description: ''
      operationId: createGroup
      security:
        - bearerAuth: []
      requestBody:
        description: Create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          description: successful operation
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid username/password supplied
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: server error
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
  /auth/signup:
    post:
      tags:
        - auth
      summary: SignUp user into the system
      description: ''
      operationId: signupUser
      requestBody:
        description: Update an existent pet in the store
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/User'
                - required:
                  - name
                  - email
                  - password
      responses:
        '200':
          description: successful operation
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Validation error
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: server error
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
  /auth/login:
    post:
      tags:
        - auth
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      requestBody:
        description: Update an existent pet in the store
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/User'
                - required:
                  - email
                  - password
      responses:
        '200':
          description: successful operation
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Validation error
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: server error
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
  /auth/logout:
    get:
      tags:
        - auth
      summary: Logs user into the system
      description: ''
      operationId: logoutUser
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
        '500':
          description: server error
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
components:
  schemas:
    Reward:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        title:
          type: string
          example: Reward
        description:
          type: string
          example: pasear al perro
        cost:
          type: integer
          example: '12345'
        expire_at:
          type: string
          format: date 
          pattern: '/^(\d{2})\/(\d{2})\/(\d{4})$/'
          maxLength: 10
          example: '01/01/1990'
        redeem:
          type: boolean
          example: false
        validate:
          type: boolean
          example: false
        user:
          $ref: '#/components/schemas/User'
    Group:
      type: object
      properties:
        name:
          type: string
          example: John
        points_name:
          type: string
          example: dogis
        points_icon:
          type: string
          example: '1'
        conf_t_approve:
          type: boolean
          example: true
        conf_t_validate:
          type: boolean
          example: true
        conf_t_invalidate:
          type: boolean
          example: true
        conf_r_valiadte:
          type: boolean
          example: true
        creator:
          $ref: '#/components/schemas/User'
        couple:
          $ref: '#/components/schemas/User'
    User:
      type: object
      properties:
        name:
          type: string
          example: theUser
        email:
          type: string
          format: email
          example: john@email.com
        password:
          type: string
          format: password
          example: '12345'
        points:
          type: integer
          example: '12345'
    ApiResponse:
      type: object
      properties:
        status:
          type: boolean
        message:
          type: string
    AuthResponse:
      type: object
      properties:
        status:
          type: boolean
        message:
          type: string
        token:
          type: string
    ValidationErrorResponse:
      type: object
      properties:
        status:
          type: boolean
        message:
          type: string
        errors:
          type: object
          properties:
            name:
              type: array
              items:
                type: string
            email:
              type: array
              items:
                type: string
            password:
              type: array
              items:
                type: string
            points_name:
              type: array
              items:
                type: string
            points_icon:
              type: array
              items:
                type: string
  requestBodies:
    User:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT